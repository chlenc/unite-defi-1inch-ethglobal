function d(t){if(!Number.isSafeInteger(t)||t<0)throw new Error("positive integer expected, got "+t)}function E(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name==="Uint8Array"}function g(t,...e){if(!E(t))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(t.length))throw new Error("Uint8Array expected of length "+e+", got length="+t.length)}function Z(t){if(typeof t!="function"||typeof t.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");d(t.outputLen),d(t.blockLen)}function b(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}function T(t,e){g(t);const n=e.outputLen;if(t.length<n)throw new Error("digestInto() expects output buffer of length at least "+n)}const u=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */function S(t){return new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4))}function $(t){return new DataView(t.buffer,t.byteOffset,t.byteLength)}function tt(t,e){return t<<32-e|t>>>e}function et(t,e){return t<<e|t>>>32-e>>>0}const x=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;function V(t){return t<<24&4278190080|t<<8&16711680|t>>>8&65280|t>>>24&255}function k(t){for(let e=0;e<t.length;e++)t[e]=V(t[e])}function F(t){if(typeof t!="string")throw new Error("utf8ToBytes expected string, got "+typeof t);return new Uint8Array(new TextEncoder().encode(t))}function B(t){return typeof t=="string"&&(t=F(t)),g(t),t}function nt(...t){let e=0;for(let o=0;o<t.length;o++){const r=t[o];g(r),e+=r.length}const n=new Uint8Array(e);for(let o=0,r=0;o<t.length;o++){const i=t[o];n.set(i,r),r+=i.length}return n}class N{clone(){return this._cloneInto()}}function R(t){const e=o=>t().update(B(o)).digest(),n=t();return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=()=>t(),e}function ot(t=32){if(u&&typeof u.getRandomValues=="function")return u.getRandomValues(new Uint8Array(t));if(u&&typeof u.randomBytes=="function")return u.randomBytes(t);throw new Error("crypto.getRandomValues must be defined")}const y=BigInt(2**32-1),A=BigInt(32);function X(t,e=!1){return e?{h:Number(t&y),l:Number(t>>A&y)}:{h:Number(t>>A&y)|0,l:Number(t&y)|0}}function M(t,e=!1){let n=new Uint32Array(t.length),o=new Uint32Array(t.length);for(let r=0;r<t.length;r++){const{h:i,l:s}=X(t[r],e);[n[r],o[r]]=[i,s]}return[n,o]}const P=(t,e,n)=>t<<n|e>>>32-n,j=(t,e,n)=>e<<n|t>>>32-n,v=(t,e,n)=>e<<n-32|t>>>64-n,C=(t,e,n)=>t<<n-32|e>>>64-n,O=[],m=[],_=[],D=BigInt(0),h=BigInt(1),K=BigInt(2),q=BigInt(7),z=BigInt(256),G=BigInt(113);for(let t=0,e=h,n=1,o=0;t<24;t++){[n,o]=[o,(2*n+3*o)%5],O.push(2*(5*o+n)),m.push((t+1)*(t+2)/2%64);let r=D;for(let i=0;i<7;i++)e=(e<<h^(e>>q)*G)%z,e&K&&(r^=h<<(h<<BigInt(i))-h);_.push(r)}const[J,Q]=M(_,!0),I=(t,e,n)=>n>32?v(t,e,n):P(t,e,n),L=(t,e,n)=>n>32?C(t,e,n):j(t,e,n);function W(t,e=24){const n=new Uint32Array(10);for(let o=24-e;o<24;o++){for(let s=0;s<10;s++)n[s]=t[s]^t[s+10]^t[s+20]^t[s+30]^t[s+40];for(let s=0;s<10;s+=2){const f=(s+8)%10,l=(s+2)%10,a=n[l],c=n[l+1],U=I(a,c,1)^n[f],H=L(a,c,1)^n[f+1];for(let p=0;p<50;p+=10)t[s+p]^=U,t[s+p+1]^=H}let r=t[2],i=t[3];for(let s=0;s<24;s++){const f=m[s],l=I(r,i,f),a=L(r,i,f),c=O[s];r=t[c],i=t[c+1],t[c]=l,t[c+1]=a}for(let s=0;s<50;s+=10){for(let f=0;f<10;f++)n[f]=t[s+f];for(let f=0;f<10;f++)t[s+f]^=~n[(f+2)%10]&n[(f+4)%10]}t[0]^=J[o],t[1]^=Q[o]}n.fill(0)}class w extends N{constructor(e,n,o,r=!1,i=24){if(super(),this.blockLen=e,this.suffix=n,this.outputLen=o,this.enableXOF=r,this.rounds=i,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,d(o),0>=this.blockLen||this.blockLen>=200)throw new Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200),this.state32=S(this.state)}keccak(){x||k(this.state32),W(this.state32,this.rounds),x||k(this.state32),this.posOut=0,this.pos=0}update(e){b(this);const{blockLen:n,state:o}=this;e=B(e);const r=e.length;for(let i=0;i<r;){const s=Math.min(n-this.pos,r-i);for(let f=0;f<s;f++)o[this.pos++]^=e[i++];this.pos===n&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:e,suffix:n,pos:o,blockLen:r}=this;e[o]^=n,n&128&&o===r-1&&this.keccak(),e[r-1]^=128,this.keccak()}writeInto(e){b(this,!1),g(e),this.finish();const n=this.state,{blockLen:o}=this;for(let r=0,i=e.length;r<i;){this.posOut>=o&&this.keccak();const s=Math.min(o-this.posOut,i-r);e.set(n.subarray(this.posOut,this.posOut+s),r),this.posOut+=s,r+=s}return e}xofInto(e){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return d(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(T(e,this),this.finished)throw new Error("digest() was already called");return this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(e){const{blockLen:n,suffix:o,outputLen:r,rounds:i,enableXOF:s}=this;return e||(e=new w(n,o,r,s,i)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=i,e.suffix=o,e.outputLen=r,e.enableXOF=s,e.destroyed=this.destroyed,e}}const Y=(t,e,n)=>R(()=>new w(e,t,n)),st=Y(1,136,256/8);export{N as H,b as a,T as b,$ as c,Z as d,g as e,ot as f,nt as g,et as h,st as k,tt as r,B as t,R as w};
